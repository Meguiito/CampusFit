{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicen\\\\OneDrive\\\\Documentos\\\\Taller de Integraci\\xF3n II\\\\CampusFit\\\\client\\\\src\\\\Paginas\\\\UsuariosAdmin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport '../Estilos/UsuariosAdmin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Usuarios() {\n  _s();\n  const [usuarios, setUsuarios] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Función para verificar si el usuario es admin\n  const fetchProfile = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('No autorizado');\n      const profileData = await response.json();\n      if (profileData.tipo_de_usuario === 'admin') {\n        setIsAdmin(true);\n        fetchUsuarios();\n      } else {\n        setError('Acceso denegado: solo los administradores pueden ver esta página.');\n      }\n    } catch (error) {\n      console.error('Error al obtener el perfil del usuario:', error);\n      setError('Error al verificar el perfil del usuario');\n    }\n  }, []); // No hay dependencias\n\n  // Función para obtener los usuarios desde la base de datos\n  const fetchUsuarios = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/usuarios', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Error al obtener los usuarios');\n      const data = await response.json();\n      setUsuarios(data); // Asigna los datos recibidos al estado\n    } catch (error) {\n      console.error('Error al obtener los usuarios:', error);\n      setError('Error al obtener la lista de usuarios');\n    }\n  };\n  useEffect(() => {\n    fetchProfile();\n  }, [fetchProfile]); // Añadido fetchProfile como dependencia\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Usuarios-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Usuarios-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Usuarios-title\",\n      children: \"Lista de Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Usuarios-user-list\",\n      children: usuarios.map(usuario => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Usuarios-user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"Usuarios-user-name\",\n          children: usuario.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Usuarios-user-email\",\n          children: [\"Email: \", usuario.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Usuarios-user-rut\",\n          children: [\"RUT: \", usuario.rut]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, usuario.email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Usuarios, \"l9ybYZ6SmMBde4sghpcIcDhrlzs=\");\n_c = Usuarios;\nexport default Usuarios;\nvar _c;\n$RefreshReg$(_c, \"Usuarios\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Usuarios","_s","usuarios","setUsuarios","isAdmin","setIsAdmin","error","setError","fetchProfile","token","localStorage","getItem","response","fetch","headers","ok","Error","profileData","json","tipo_de_usuario","fetchUsuarios","console","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","usuario","username","email","rut","_c","$RefreshReg$"],"sources":["C:/Users/vicen/OneDrive/Documentos/Taller de Integración II/CampusFit/client/src/Paginas/UsuariosAdmin.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport '../Estilos/UsuariosAdmin.css';\r\n\r\nfunction Usuarios() {\r\n  const [usuarios, setUsuarios] = useState([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Función para verificar si el usuario es admin\r\n  const fetchProfile = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/profile', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!response.ok) throw new Error('No autorizado');\r\n\r\n      const profileData = await response.json();\r\n      if (profileData.tipo_de_usuario === 'admin') {\r\n        setIsAdmin(true);\r\n        fetchUsuarios();\r\n      } else {\r\n        setError('Acceso denegado: solo los administradores pueden ver esta página.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al obtener el perfil del usuario:', error);\r\n      setError('Error al verificar el perfil del usuario');\r\n    }\r\n  }, []); // No hay dependencias\r\n\r\n  // Función para obtener los usuarios desde la base de datos\r\n  const fetchUsuarios = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/usuarios', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!response.ok) throw new Error('Error al obtener los usuarios');\r\n\r\n      const data = await response.json();\r\n      setUsuarios(data); // Asigna los datos recibidos al estado\r\n    } catch (error) {\r\n      console.error('Error al obtener los usuarios:', error);\r\n      setError('Error al obtener la lista de usuarios');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProfile();\r\n  }, [fetchProfile]); // Añadido fetchProfile como dependencia\r\n\r\n  if (error) {\r\n    return <p className=\"Usuarios-error\">{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Usuarios-container\">\r\n      <h1 className=\"Usuarios-title\">Lista de Usuarios</h1>\r\n      {isAdmin && (\r\n        <div className=\"Usuarios-user-list\">\r\n          {usuarios.map((usuario) => (\r\n            <div className=\"Usuarios-user-card\" key={usuario.email}>\r\n              <h2 className=\"Usuarios-user-name\">{usuario.username}</h2>\r\n              <p className=\"Usuarios-user-email\">Email: {usuario.email}</p>\r\n              <p className=\"Usuarios-user-rut\">RUT: {usuario.rut}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Usuarios;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}